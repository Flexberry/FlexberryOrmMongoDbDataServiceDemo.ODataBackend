//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmberFlexberryDummy
{
    using System;
    using System.Xml;
    using ICSSoft.STORMNET;
    
    
    // *** Start programmer edit section *** (Using statements)

    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// TestPolyChild.
    /// </summary>
    // *** Start programmer edit section *** (TestPolyChild CustomAttributes)

    // *** End programmer edit section *** (TestPolyChild CustomAttributes)
    [AutoAltered()]
    [ICSSoft.STORMNET.NotStored(false)]
    [AccessType(ICSSoft.STORMNET.AccessType.none)]
    [View("TestPolyChildEdit", new string[] {
            "Pole",
            "ChildPole"})]
    [View("TestPolyChildList", new string[] {
            "Pole as \'Pole\'",
            "ChildPole as \'ChildPole\'"})]
    public class TestPolyChild : EmberFlexberryDummy.TestPolyBase
    {
        
        private int fChildPole;
        
        // *** Start programmer edit section *** (TestPolyChild CustomMembers)

        // *** End programmer edit section *** (TestPolyChild CustomMembers)

        
        /// <summary>
        /// ChildPole.
        /// </summary>
        // *** Start programmer edit section *** (TestPolyChild.ChildPole CustomAttributes)

        // *** End programmer edit section *** (TestPolyChild.ChildPole CustomAttributes)
        public virtual int ChildPole
        {
            get
            {
                // *** Start programmer edit section *** (TestPolyChild.ChildPole Get start)

                // *** End programmer edit section *** (TestPolyChild.ChildPole Get start)
                int result = this.fChildPole;
                // *** Start programmer edit section *** (TestPolyChild.ChildPole Get end)

                // *** End programmer edit section *** (TestPolyChild.ChildPole Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (TestPolyChild.ChildPole Set start)

                // *** End programmer edit section *** (TestPolyChild.ChildPole Set start)
                this.fChildPole = value;
                // *** Start programmer edit section *** (TestPolyChild.ChildPole Set end)

                // *** End programmer edit section *** (TestPolyChild.ChildPole Set end)
            }
        }
        
        /// <summary>
        /// Class views container.
        /// </summary>
        public class Views
        {
            
            /// <summary>
            /// Представление формы редактирования дочернего элемента для проверки полиморфных связей.
            /// </summary>
            public static ICSSoft.STORMNET.View TestPolyChildEdit
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("TestPolyChildEdit", typeof(EmberFlexberryDummy.TestPolyChild));
                }
            }
            
            /// <summary>
            /// Списковое представление дочернего элемента для проверки полиморфных связей.
            /// </summary>
            public static ICSSoft.STORMNET.View TestPolyChildList
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("TestPolyChildList", typeof(EmberFlexberryDummy.TestPolyChild));
                }
            }
        }
    }
}
